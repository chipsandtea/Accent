(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> cannot concatenate 'str' and 'NoneType' objects"
p3
sS'layer'
p4
S'/home/jliou/web2py/applications/accent/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n# -------------------------------------------------------------------------\n# This is a sample controller\n# - index is the default action of any application\n# - user is required for authentication and authorization\n# - download is for downloading files uploaded in the db (does streaming)\n# -------------------------------------------------------------------------\nfrom test_script import demoCall\n\n#@auth.requires_login()\ndef index():\n    """\n    This is your main controller.\n    """\n    # I am creating a bogus list here, just to have some divs appear in the\n    # view.  You need to read at most 20 posts from the database, in order of\n    # most recent first, and you need to return that list here.\n    # Note that posts is NOT a list of strings in your actual code; it is\n    # what you get from a db(...).select(...).\n    posts = [\'banana\', \'pear\', \'eggplant\']\n    return dict(posts=posts)\n\n\n@request.restful()\ndef api():\n    response.view = \'generic.json\'\n\n    def GET(tablename, id):\n        if not tablename == \'acc\':\n            raise HTTP(400)\n        return dict(person = db.acc(id))\n\n    def POST(tablename, **fields):\n        if not tablename == \'acc\':\n            raise HTTP(400)\n\tlogger.info("post request:" + demoCall());\n\treturn response.json("hi");\n       #return response.json(db.acc.validate_and_insert(**fields))\n      #  if table_name == \'person\':\n       #     return dict(db.person.validate_and_insert(**vars))\n       # elif table_name == \'pet\':\n       #     return dict(db.pet.validate_and_insert(**vars))\n       # else:\n       #     raise HTTP(400)  \n    #locals() returns a dictionary including all the variables in the local function         \n    return locals()      \n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n\nresponse._vars=response._caller(api)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/jliou/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/jliou/web2py/applications/accent/controllers/default.py", line 89, in <module>\n  File "/home/jliou/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/jliou/web2py/gluon/globals.py", line 380, in f\n    res = rest_action(*request.args, **request.vars)\n  File "/home/jliou/web2py/applications/accent/controllers/default.py", line 38, in POST\n    logger.info("post request:" + demoCall());\nTypeError: cannot concatenate \'str\' and \'NoneType\' objects\n'
p11
s.